From 8a1763562298131e06b4e67e1ddd7df58f0345cd Mon Sep 17 00:00:00 2001
From: Yiyu Si <1486864380@qq.com>
Date: Thu, 1 Sep 2022 19:31:50 +0800
Subject: [PATCH] Implement Akarin realtime API


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index d7810b1a8..6bfb15996 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -61,11 +61,12 @@ import org.bukkit.event.world.WorldLoadEvent;
 import io.akarin.api.internal.Akari;
 import io.akarin.api.internal.Akari.AssignableFactory;
 import io.akarin.api.internal.mixin.IMixinWorldServer;
+import io.akarin.api.internal.mixin.IMixinRealTimeTicking;
 import io.akarin.server.core.AkarinGlobalConfig;
 import io.akarin.server.core.AkarinSlackScheduler;
 //Akarin End
 
-public abstract class MinecraftServer implements ICommandListener, Runnable, IAsyncTaskHandler, IMojangStatistics {
+public abstract class MinecraftServer implements ICommandListener, Runnable, IAsyncTaskHandler, IMojangStatistics, IMixinRealTimeTicking { // Akarin realtime
 
     private static MinecraftServer SERVER; // Paper
     public static final Logger LOGGER = LogManager.getLogger();
@@ -142,6 +143,8 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
     //Akarin Start
     private boolean tickedPrimaryEntities;
 	private int cachedWorldSize;
+    private static long lastTickNanos = System.nanoTime();
+    private static long realTimeTicks = 1;
     // Akarin End
 
     public MinecraftServer(OptionSet options, Proxy proxy, DataConverterManager dataconvertermanager, YggdrasilAuthenticationService yggdrasilauthenticationservice, MinecraftSessionService minecraftsessionservice, GameProfileRepository gameprofilerepository, UserCache usercache) {
@@ -790,6 +793,13 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
     public void B() {}
 
     protected void C() throws ExceptionWorldConflict { // CraftBukkit - added throws
+        // Akarin - on tick update realtime ticks
+        long currentNanos = System.nanoTime();
+        realTimeTicks = (currentNanos - lastTickNanos) / 50000000;
+        if (realTimeTicks < 1) {
+            realTimeTicks = 1;
+        }
+        lastTickNanos = currentNanos;
         co.aikar.timings.TimingsManager.FULL_SERVER_TICK.startTiming(); // Paper
         this.slackActivityAccountant.tickStarted(); // Spigot
         long i = System.nanoTime(); long startTime = i; // Paper
@@ -1754,4 +1764,11 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
         return SERVER;
     }
     // CraftBukkit end
+    
+    // Akarin Start
+    @Override
+    public long getRealTimeTicks() {
+        return realTimeTicks;
+    }
+    // Akarin End
 }
-- 
2.35.1.windows.2


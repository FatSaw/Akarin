From 804b3f256c69ae206c270072613232eafc041d88 Mon Sep 17 00:00:00 2001
From: Yiyu Si <1486864380@qq.com>
Date: Thu, 1 Sep 2022 21:11:03 +0800
Subject: [PATCH] Akarin realtime fixes


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 9ec316dae..8c1106b9c 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -64,6 +64,7 @@ import com.destroystokyo.paper.event.player.IllegalPacketEvent; // Paper
 import com.destroystokyo.paper.event.player.PlayerJumpEvent; // Paper
 import co.aikar.timings.MinecraftTimings; // Paper
 // CraftBukkit end
+import io.akarin.api.internal.mixin.IMixinRealTimeTicking; // Akarin
 
 /**
  * Akarin Changes Note
@@ -216,7 +217,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
         this.minecraftServer.methodProfiler.b();
         // CraftBukkit start
-        for (int spam; (spam = this.chatThrottle) > 0 && !chatSpamField.compareAndSet(this, spam, spam - 1); ) ;
+        for (int spam; (spam = this.chatThrottle) > 0 && !chatSpamField.compareAndSet(this, spam, Math.max(0, spam - (int) ((IMixinRealTimeTicking) this.minecraftServer).getRealTimeTicks())); ) ;
         if (tabSpamLimiter.get() > 0) tabSpamLimiter.getAndDecrement(); // Paper - split to seperate variable
         /* Use thread-safe field access instead
         if (this.chatThrottle > 0) {
@@ -226,7 +227,9 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
         // CraftBukkit end
 
         if (this.j > 0) {
-            --this.j;
+            // Akarin - fixup drop spam check
+            int ticks = (int) ((IMixinRealTimeTicking) this.minecraftServer).getRealTimeTicks();
+            this.j = Math.max(0, this.j - ticks);
         }
 
         if (this.player.J() > 0L && this.minecraftServer.getIdleTimeout() > 0 && MinecraftServer.aw() - this.player.J() > (long) (this.minecraftServer.getIdleTimeout() * 1000 * 60)) {
diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 3d8679824..e1983e58a 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -8,6 +8,7 @@ import org.bukkit.event.Event;
 import org.bukkit.event.block.Action;
 import org.bukkit.event.player.PlayerInteractEvent;
 // CraftBukkit end
+import io.akarin.api.internal.mixin.IMixinRealTimeTicking; // Akarin
 
 public class PlayerInteractManager {
 
@@ -60,7 +61,10 @@ public class PlayerInteractManager {
     }
 
     public void a() {
-        this.currentTick = MinecraftServer.currentTick; // CraftBukkit;
+        // this.currentTick = MinecraftServer.currentTick; // CraftBukkit;
+        int ticks = (int) ((IMixinRealTimeTicking) this.world.getMinecraftServer()).getRealTimeTicks();
+        this.currentTick += ticks;
+        // Akarin - fixup digging time and override craftbukkit changes
         float f;
         int i;
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 9ed737467..51f4c4c1a 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -37,12 +37,13 @@ import com.destroystokyo.paper.antixray.ChunkPacketBlockController; // Anti-Xray
 import com.destroystokyo.paper.antixray.ChunkPacketBlockControllerAntiXray; // Anti-Xray
 import com.google.common.collect.Sets;
 // Paper end
+import io.akarin.api.internal.mixin.IMixinRealTimeTicking; // Akarin
 
 /**
  * Akarin Changes Note
  * 1) Optimizes player lookup (performance)
  */
-public abstract class World implements IBlockAccess {
+public abstract class World implements IBlockAccess, IMixinRealTimeTicking {
 
     private int a = 63;
     protected boolean d;
@@ -3320,4 +3321,12 @@ public abstract class World implements IBlockAccess {
     public BlockPosition a(String s, BlockPosition blockposition, boolean flag) {
         return null;
     }
+
+    @Override
+    public long getRealTimeTicks() {
+        if (this.getMinecraftServer() != null) {
+            return ((IMixinRealTimeTicking) this.getMinecraftServer()).getRealTimeTicks();
+        }
+        return 1;
+    }
 }
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index a43eb1168..f2fb78e69 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -28,13 +28,14 @@ import org.bukkit.event.weather.LightningStrikeEvent;
 // CraftBukkit end
 
 import io.akarin.api.internal.mixin.IMixinWorldServer; // Akarin
+import io.akarin.api.internal.mixin.IMixinRealTimeTicking; // Akarin
 
 /**
  * Akarin Changes Note
  * 1) Expose private members (core, safety issue)
  * 2) Removed hardcore difficulty codes (slack service, feature)
  */
-public class WorldServer extends World implements IAsyncTaskHandler {
+public class WorldServer extends World implements IAsyncTaskHandler, IMixinWorldServer {
 
     private static final Logger a = LogManager.getLogger();
     boolean stopPhysicsEvent = false; // Paper
@@ -308,6 +309,16 @@ public class WorldServer extends World implements IAsyncTaskHandler {
 
     @Override
     public void doTick() {
+        // Akarin Start - fix time of day
+        if (this.getGameRules().getBoolean("doDaylightCycle")) {
+            // Subtract the one the original tick method is going to add
+            long diff = this.getRealTimeTicks() - 1;
+            // Don't set if we're not changing it as other mods might be listening for changes
+            if (diff > 0) {
+                this.worldData.setDayTime(this.worldData.getDayTime() + diff);
+            }
+        }
+        // Akarin End
         super.doTick();
         // Akarin start - goes to slack service
         /* if (this.getWorldData().isHardcore() && this.getDifficulty() != EnumDifficulty.HARD) {
-- 
2.35.1.windows.2


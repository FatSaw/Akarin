From 793a5fb2849250add5867ff2d02396ee57348222 Mon Sep 17 00:00:00 2001
From: Yiyu Si <1486864380@qq.com>
Date: Fri, 19 Aug 2022 22:40:42 +0800
Subject: [PATCH] Akarin MCUtil


diff --git a/src/main/java/net/minecraft/server/MCUtil.java b/src/main/java/net/minecraft/server/MCUtil.java
index 4539b5601..2a9b57e1e 100644
--- a/src/main/java/net/minecraft/server/MCUtil.java
+++ b/src/main/java/net/minecraft/server/MCUtil.java
@@ -18,6 +18,8 @@ import java.util.concurrent.Executors;
 import java.util.function.Supplier;
 import java.util.regex.Pattern;
 
+import io.akarin.api.internal.Akari; //Akarin
+
 public final class MCUtil {
     private static final Executor asyncExecutor = Executors.newSingleThreadExecutor(new ThreadFactoryBuilder().setNameFormat("Paper Async Task Handler Thread - %1$d").build());
 
@@ -49,9 +51,11 @@ public final class MCUtil {
      * @param <T>
      * @return
      */
+
+    //Akarin Start
     public static <T> T ensureMain(String reason, Supplier<T> run) {
-        if (AsyncCatcher.enabled && Thread.currentThread() != MinecraftServer.getServer().primaryThread) {
-            new IllegalStateException( "Asynchronous " + reason + "! Blocking thread until it returns ").printStackTrace();
+        if (AsyncCatcher.enabled && !Akari.isPrimaryThread()) {
+            new IllegalStateException("Asynchronous " + reason + "! Blocking thread until it returns ").printStackTrace();
             Waitable<T> wait = new Waitable<T>() {
                 @Override
                 protected T evaluate() {
@@ -66,8 +70,10 @@ public final class MCUtil {
             }
             return null;
         }
+        
         return run.get();
     }
+    //Akarin End
 
     public static PlayerProfile toBukkit(GameProfile profile) {
         return CraftPlayerProfile.asBukkitMirror(profile);
-- 
2.35.1.windows.2

